---
title: Shoulda Matchers
---

%nav
  .wrapper
    .logo
    %a.btn-github(href="https://github.com/thoughtbot/shoulda-matchers" target="_blank") Github
    %a.btn-docs(href="http://shoulda.io/docs" target="_blank") Docs
%section.main-header
  .wrapper
    .main-header-copy
      %h1.subheader Simple One-Liner Tests for Rails
    .browser-wrapper
      .browser-container.animation
        %h4.subheader Without Shoulda
        .browser-bar
          .browser-button
          .browser-button
          .browser-button
          .emoji-poop
        .browser-background
          %pre
            %code.language-ruby
              :preserve
                describe User do
                  it 'is not valid if its username is the same as another user within the same account' do
                    _existing_user = FactoryGirl.create(:user,
                      username: 'johnsmith',
                      account_id: 1
                    )
                    user = FactoryGirl.build(:user,
                      username: 'johnsmith',
                      account_id: 1
                    )
                    expect(user).not_to be_valid
                  end

                  it 'is valid if its username is the same as another user within the same account, but for different case' do
                    _existing_user = FactoryGirl.create(:user,
                      username: 'johnsmith',
                      account_id: 1
                    )
                    user = FactoryGirl.build(:user,
                      username: 'JohnSmith',
                      account_id: 1
                    )
                    expect(user).to be_valid
                  end
                end
    .browser-wrapper
      .browser-container.animation
        %h4.subheader With Shoulda
        .browser-bar
          .browser-button
          .browser-button
          .browser-button
          .emoji-thumb
        .browser-background
          %pre
            %code.language-ruby
              :preserve
                describe User do
                  context 'validations' do
                    before { FactoryGirl.build(:user) }

                    it do
                      should validate_uniqueness_of(:username).
                        scoped_to(:account_id).
                        case_insensitive
                    end
                  end
                end

%section.benefits
  .wrapper
    .benefit
      =image_tag 'clock-icon.svg', class: "icon animate"
      %h4 Save Time
      %p Spend less time writing long, complex, and error-prone tests
    .benefit
      =image_tag 'write-icon.svg', class: "icon animate"
      %h4 Write More Tests
      %p Test thoroughly by using over 30 pre-existing matchers, developed over time
    .benefit
      =image_tag 'check-icon.svg', class: "icon animate"
      %h4 More Readable Results
      %p Get clear, readable, and actionable messages from the tests you run

%section.examples-wrapper
  .wrapper
    %h2.section-header
      Extensive matchers for ActiveRecord, ActiveModel, and ActionController
    .vertical-tabs-container.js-vertical-tabs-container
      .vertical-tabs
        %a.js-vertical-tab.vertical-tab.is-active{:href => "#tab1"} ActiveRecord validation matchers
        %a.js-vertical-tab.vertical-tab{:href => "#tab2"} ActiveRecord association matchers
        %a.js-vertical-tab.vertical-tab{:href => "#tab3"} ActiveModel validation matchers
        %a.js-vertical-tab.vertical-tab{:href => "#tab4"} Other ActiveModel matchers
        %a.js-vertical-tab.vertical-tab{:href => "#tab5"} ActionController matchers
        %a.js-vertical-tab.vertical-tab{:href => "#tab6"} Independent matchers
      .vertical-tab-content-container
        #tab1.vertical-tab-accordion
          %a.js-vertical-tab-accordion-heading.vertical-tab-accordion-heading.is-active{:href => "#tab1"}
            ActiveRecord validation matchers
          .js-vertical-tab-content.vertical-tab-content.is-active
            %p
              Example:
              %code validate_uniqueness_of
              matcher
            .code-sample
              .filename Post model
              %pre
                %code.language-ruby
                  :preserve
                    class Post &lt; ActiveRecord::Base
                      validates_uniqueness_of :slug,
                        scope: :user_id,
                        message: 'duplicate slug within same user_id',
                        case_insensitive: true
                    end
            .code-sample
              .filename Test using RSpec
              %pre
                %code.language-ruby
                  :preserve
                    describe Post do
                      context 'validations' do
                        subject { FactoryGirl.build(:post) }

                        it do
                          should validate_uniqueness_of(:slug).
                            scoped_to(:user_id).
                            with_message('duplicate slug within same user_id').
                            case_insensitive
                        end
                      end
                    end
            .code-sample
              .filename Test using Shoulda Context
              %pre
                %code.language-ruby
                  :preserve
                    class PostTest &lt; ActiveSupport::TestCase
                      context 'validations' do
                        subject { FactoryGirl.build(:post) }

                        should validate_uniqueness_of(:slug).
                          scoped_to(:user_id).
                          with_message('duplicate slug within same user_id').
                          case_insensitive
                      end
                    end
        #tab2.vertical-tab-accordion
          %a.js-vertical-tab-accordion-heading.vertical-tab-accordion-heading{:href => "#tab2"}
            ActiveRecord association matchers
          .js-vertical-tab-content.vertical-tab-content
            %p
              Example:
              %code have_many
              matcher
            .code-sample
              .filename Post model
              %pre
                %code.language-ruby
                  :preserve
                    class Person &lt; ActiveRecord::Base
                      has_many :acquaintances,
                        through: :friends,
                        class_name: 'Person'
                    end
            .code-sample
              .filename Test using RSpec
              %pre
                %code.language-ruby
                  :preserve
                    describe Person do
                      it do
                        should have_many(:acquaintances).
                          through(:friends).
                          class_name('Person')
                      end
                    end
            .code-sample
              .filename Test using Shoulda Context
              %pre
                %code.language-ruby
                  :preserve
                    require 'test_helper'

                    class PersonTest &lt; ActiveSupport::TestCase
                      should have_many(:acquaintances).
                        through(:friends).
                        class_name('Person')
                    end
        #tab3.vertical-tab-accordion
          %a.js-vertical-tab-accordion-heading.vertical-tab-accordion-heading{:href => "#tab3"}
            ActiveModel validation matchers
          .js-vertical-tab-content.vertical-tab-content
            %p
              Example:
              %code validate_presence_of
              matcher
            .code-sample
              .filename Post model
              %pre
                %code.language-ruby
                  :preserve
                    class Robot
                      include ActiveModel::Model
                      attr_accessor :arms

                      validate :arms, presence: true
                    end
            .code-sample
              .filename Test using RSpec
              %pre
                %code.language-ruby
                  :preserve
                    describe Robot do
                      it { should validate_presence_of(:arms) }
                    end
            .code-sample
              .filename Test using Shoulda Context
              %pre
                %code.language-ruby
                  :preserve
                    class RobotTest &lt; ActiveSupport::TestCase
                      should validate_presence_of(:arms)
                    end
        #tab4.vertical-tab-accordion
          %a.js-vertical-tab-accordion-heading.vertical-tab-accordion-heading{:href => "#tab4"}
            Other ActiveModel matchers
          .js-vertical-tab-content.vertical-tab-content
            %p
              Example:
              %code have_secure_password
              matcher
            .code-sample
              .filename Post model
              %pre
                %code.language-ruby
                  :preserve
                    class User
                      include ActiveModel::Model
                      include ActiveModel::SecurePassword
                      attr_accessor :password

                      has_secure_password
                    end
            .code-sample
              .filename Test using RSpec
              %pre
                %code.language-ruby
                  :preserve
                    describe User do
                      it { should have_secure_password }
                    end
            .code-sample
              .filename Test using Shoulda Context
              %pre
                %code.language-ruby
                  :preserve
                    class UserTest &lt; ActiveSupport::TestCase
                      should have_secure_password
                    end
        #tab5.vertical-tab-accordion
          %a.js-vertical-tab-accordion-heading.vertical-tab-accordion-heading{:href => "#tab5"}
            ActionController matchers
          .js-vertical-tab-content.vertical-tab-content
            %p
              Example:
              %code rescue_from
              matcher
            .code-sample
              .filename Routes
              %pre
                %code.language-ruby
                  :preserve
                    class ApplicationController &lt; ActionController::Base
                      rescue_from ActiveRecord::RecordNotFound, with: :render_not_found

                      private

                      def render_not_found
                        # ...
                      end
                    end
            .code-sample
              .filename Test using RSpec
              %pre
                %code.language-ruby
                  :preserve
                    describe ApplicationController do
                      it do
                        should rescue_from(ActiveRecord::RecordNotFound).
                          with(:render_not_found)
                      end
                    end
            .code-sample
              .filename Test using Shoulda Context
              %pre
                %code.language-ruby
                  :preserve
                    class ApplicationControllerTest &lt; ActionController::TestCase
                      should rescue_from(ActiveRecord::RecordNotFound).
                        with(:render_not_found)
                    end
        #tab6.vertical-tab-accordion
          %a.js-vertical-tab-accordion-heading.vertical-tab-accordion-heading{:href => "#tab6"}
            Independent matchers
          .js-vertical-tab-content.vertical-tab-content
            %p
              Example:
              %code delegate_method
              matcher
            .code-sample
              .filename app/models/courier.rb
              %pre
                %code.language-ruby
                  :preserve
                    require 'forwardable'

                    class Courier
                      extend Forwardable

                      attr_reader :post_office

                      def_delegators :post_office, :deliver

                      def initialize
                        @post_office = PostOffice.new
                      end
                    end
            .code-sample
              .filename Test using RSpec
              %pre
                %code.language-ruby
                  :preserve
                    describe Courier do
                      it { should delegate_method(:deliver).to(:post_office) }
                    end
            .code-sample
              .filename Test using Shoulda Context
              %pre
                %code.language-ruby
                  :preserve
                    class CourierTest &lt; Minitest::Test
                      should delegate_method(:deliver).to(:post_office)
                    end

%section.wrapper

  %h2.section-header List of Matchers

  .list-wrapper
    %h4 ActiveRecord
    %li allow_mass_assignment_of
    %li allow_value
    %li validate_inclusion_of
    %li validate_exclusion_of
    %li ensure_length_of
    %li have_secure_password
    %li validate_confirmation_of
    %li validate_numericality_of
    %li validate_presence_of
    %li validate_uniqueness_of

  .list-wrapper
    %h4 ActiveModel
    %li accept_nested_attributes_for
    %li belong_to
    %li define_enum_for
    %li have_many
    %li have_one
    %li have_and_belong_to_many
    %li have_db_column
    %li have_db_index
    %li have_readonly_attribute
    %li serialize

  .list-wrapper
    %h4 ActionController
    %li filter_param
    %li redirect_to
    %li render_template
    %li render_with_layout
    %li rescue_from
    %li respond_with
    %li route
    %li set_session
    %li set_the_flash

  .list-wrapper
    %h4 Independent Matchers
    %li delegate_method

%footer
  .wrapper
    .footer-buttons
      %a.btn-github(href="https://github.com/thoughtbot/shoulda-matchers" target="_blank")
        Get full installation instructions on GitHub
    %p Shoulda Matchers is maintained and funded by thoughtbot, inc. Tweet your questions or suggestions to <a href='https://twitter.com/mcmire'>@mcmire</a> or <a href='https://twitter.com/thoughtbot'>@thoughtbot</a>
    %p Copyright © 2014 thoughtbot, inc.
